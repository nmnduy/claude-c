name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        compiler: [gcc, clang]
    env:
      CC: ${{ matrix.compiler }}

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev libcjson-dev sqlite3 libsqlite3-dev libssl-dev build-essential

      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install curl cjson sqlite3 openssl pkg-config

      - name: Build with ${{ matrix.compiler }}
        env:
          CC: ${{ matrix.compiler }}
        run: |
          make clean
          make all

      - name: Run tests with ${{ matrix.compiler }}
        env:
          CC: ${{ matrix.compiler }}
        run: make test

      - name: Test installation
        env:
          CC: ${{ matrix.compiler }}
        run: |
          make clean
          make install INSTALL_PREFIX=/tmp/claude-c-install
          /tmp/claude-c-install/bin/claude-c --version

      - name: Build with sanitizers (${{ matrix.compiler }})
        env:
          CC: ${{ matrix.compiler }}
        run: |
          make clean
          make SANITIZERS=-fsanitize=address,undefined all

      - name: Run tests with sanitizers (${{ matrix.compiler }})
        env:
          CC: ${{ matrix.compiler }}
        run: make SANITIZERS=-fsanitize=address,undefined test
